{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nexport default function useDebounce(value) {\n  _s();\n\n  let delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => setDebouncedValue(value), delay);\n    return () => clearTimeout(handler);\n  }, [value]);\n  return debouncedValue;\n}\n\n_s(useDebounce, \"KDuPAtDOgxm8PU6legVJOb3oOmA=\");","map":{"version":3,"names":["useEffect","useState","useDebounce","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout"],"sources":["/Users/alexander/Desktop/WebStormProj/spareact/src/hooks/debounce.ts"],"sourcesContent":["import {useEffect, useState} from \"react\";\n\nexport default function useDebounce<T>(value: T, delay = 500): T {\n\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(\n        () => {\n\n            const handler = setTimeout(() => setDebouncedValue(value), delay);\n\n            return () => clearTimeout(handler);\n        },\n        [value]\n    );\n    return debouncedValue\n}"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AAEA,eAAe,SAASC,WAAT,CAAwBC,KAAxB,EAAkD;EAAA;;EAAA,IAAhBC,KAAgB,uEAAR,GAAQ;EAE7D,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAACE,KAAD,CAApD;EACAH,SAAS,CACL,MAAM;IAEF,MAAMO,OAAO,GAAGC,UAAU,CAAC,MAAMF,iBAAiB,CAACH,KAAD,CAAxB,EAAiCC,KAAjC,CAA1B;IAEA,OAAO,MAAMK,YAAY,CAACF,OAAD,CAAzB;EACH,CANI,EAOL,CAACJ,KAAD,CAPK,CAAT;EASA,OAAOE,cAAP;AACH;;GAbuBH,W"},"metadata":{},"sourceType":"module"}