{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport function useInput() {\n  _s();\n\n  let initialValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  const [value, setValue] = useState(initialValue);\n\n  const onChange = event => {\n    setValue(event.target.value);\n  };\n\n  return {\n    value,\n    onChange\n  };\n}\n\n_s(useInput, \"L08zUdRTae9t+nWvf9xbU6NcRrM=\");","map":{"version":3,"names":["useState","useInput","initialValue","value","setValue","onChange","event","target"],"sources":["/Users/alexander/Desktop/WebStormProj/spareact/src/hooks/input.ts"],"sourcesContent":["import {ChangeEvent, useState} from \"react\";\nimport useDebounce from \"./debounce\";\nimport AirportSearch from \"../components/AirportSearch\";\n\ninterface InputReturn {\n    value: string\n    onChange: (event: ChangeEvent<HTMLInputElement>) => void\n}\n\nexport function useInput(initialValue = ''):InputReturn {\n    const [value, setValue] = useState(initialValue)\n\n\n    const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setValue(event.target.value)\n\n    }\n\n    return {\n        value,\n        onChange\n    }\n}"],"mappings":";;AAAA,SAAqBA,QAArB,QAAoC,OAApC;AASA,OAAO,SAASC,QAAT,GAAiD;EAAA;;EAAA,IAA/BC,YAA+B,uEAAhB,EAAgB;EACpD,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACE,YAAD,CAAlC;;EAGA,MAAMG,QAAQ,GAAIC,KAAD,IAA0C;IACvDF,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAAR;EAEH,CAHD;;EAKA,OAAO;IACHA,KADG;IAEHE;EAFG,CAAP;AAIH;;GAbeJ,Q"},"metadata":{},"sourceType":"module"}