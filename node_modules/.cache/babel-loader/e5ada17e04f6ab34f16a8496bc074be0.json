{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  access: '',\n  username: ' ',\n  isAuth: false\n};\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    login(state, action) {\n      state.access = action.payload.access;\n      state.username = action.payload.username;\n      state.isAuth = Boolean(action.payload.access);\n    }\n\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","access","username","isAuth","authSlice","name","reducers","login","state","action","payload","Boolean","reducer"],"sources":["/Users/alexander/Desktop/WebStormProj/spareact/src/store/slices/authSlice.ts"],"sourcesContent":["import {IAirport, IAirportCountry, IAirportRegion, IAirportType} from \"../../models/models\";\nimport {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\n\ninterface AuthState {\n    access: string\n    username: string\n    isAuth: boolean\n}\n\n\nconst initialState: AuthState = {\n    access: '',\n    username: ' ',\n    isAuth: false\n}\n\ninterface AuthPayload {\n    username: string\n    access: string\n}\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        login(state, action: PayloadAction<AuthPayload>) {\n            state.access = action.payload.access\n            state.username = action.payload.username\n            state.isAuth = Boolean(action.payload.access)\n            \n        }\n\n    }\n})\n\nexport default authSlice.reducer"],"mappings":"AACA,SAAQA,WAAR,QAAyC,kBAAzC;AASA,MAAMC,YAAuB,GAAG;EAC5BC,MAAM,EAAE,EADoB;EAE5BC,QAAQ,EAAE,GAFkB;EAG5BC,MAAM,EAAE;AAHoB,CAAhC;AAWA,OAAO,MAAMC,SAAS,GAAGL,WAAW,CAAC;EACjCM,IAAI,EAAE,MAD2B;EAEjCL,YAFiC;EAGjCM,QAAQ,EAAE;IACNC,KAAK,CAACC,KAAD,EAAQC,MAAR,EAA4C;MAC7CD,KAAK,CAACP,MAAN,GAAeQ,MAAM,CAACC,OAAP,CAAeT,MAA9B;MACAO,KAAK,CAACN,QAAN,GAAiBO,MAAM,CAACC,OAAP,CAAeR,QAAhC;MACAM,KAAK,CAACL,MAAN,GAAeQ,OAAO,CAACF,MAAM,CAACC,OAAP,CAAeT,MAAhB,CAAtB;IAEH;;EANK;AAHuB,CAAD,CAA7B;AAcP,eAAeG,SAAS,CAACQ,OAAzB"},"metadata":{},"sourceType":"module"}