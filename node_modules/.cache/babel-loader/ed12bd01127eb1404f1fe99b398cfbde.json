{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  loading: false,\n  count: 0,\n  error: '',\n  airports: [],\n  airportsContainer: []\n};\nexport const airportSlice = createSlice({\n  name: 'airport',\n  initialState,\n  reducers: {\n    fetching(state) {\n      state.loading = true;\n    },\n\n    fetchSucces(state, action) {\n      state.loading = false;\n      state.airports = action.payload.airports;\n      state.airportsContainer = action.payload.airports;\n      state.count = action.payload.count;\n      state.error = '';\n    },\n\n    fetchError(state, action) {\n      state.loading = false;\n      state.error = action.payload.message;\n    },\n\n    filter(state, action) {\n      state.airports = state.airportsContainer.filter(a => a.type.includes(action.payload.type)).filter(a => a.country.includes(action.payload.country)).filter(a => a.region.includes(action.payload.region));\n    }\n\n  }\n});\nexport default airportSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","loading","count","error","airports","airportsContainer","airportSlice","name","reducers","fetching","state","fetchSucces","action","payload","fetchError","message","filter","a","type","includes","country","region","reducer"],"sources":["/Users/alexander/Desktop/WebStormProj/spareact/src/store/slices/airportSlice.ts"],"sourcesContent":["import {IAirport, IFilter} from \"../../models/models\";\nimport {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\n\ninterface AirportState {\n    loading: boolean,\n    error: string,\n    count: number,\n    airports: IAirport[]\n    airportsContainer: IAirport[]\n}\n\n\nconst initialState: AirportState = {\n    loading: false,\n    count: 0,\n    error: '',\n    airports: [],\n    airportsContainer: []\n}\n\ninterface AirportPayload {\n    airports: IAirport[]\n    count: number\n}\n\nexport const airportSlice = createSlice({\n    name: 'airport',\n    initialState,\n    reducers: {\n        fetching(state) {\n            state.loading = true\n        },\n        fetchSucces(state, action: PayloadAction<AirportPayload>) {\n            state.loading = false\n            state.airports = action.payload.airports\n            state.airportsContainer = action.payload.airports\n            state.count = action.payload.count\n            state.error = ''\n        },\n        fetchError(state, action: PayloadAction<Error>) {\n            state.loading = false\n            state.error = action.payload.message\n        },\n        filter(state, action: PayloadAction<IFilter>) {\n            state.airports = state.airportsContainer\n                .filter(a => a.type.includes(action.payload.type))\n                .filter(a => a.country.includes(action.payload.country))\n                .filter(a => a.region.includes(action.payload.region))\n        }\n\n    }\n})\n\nexport default airportSlice.reducer"],"mappings":"AACA,SAAQA,WAAR,QAAyC,kBAAzC;AAWA,MAAMC,YAA0B,GAAG;EAC/BC,OAAO,EAAE,KADsB;EAE/BC,KAAK,EAAE,CAFwB;EAG/BC,KAAK,EAAE,EAHwB;EAI/BC,QAAQ,EAAE,EAJqB;EAK/BC,iBAAiB,EAAE;AALY,CAAnC;AAaA,OAAO,MAAMC,YAAY,GAAGP,WAAW,CAAC;EACpCQ,IAAI,EAAE,SAD8B;EAEpCP,YAFoC;EAGpCQ,QAAQ,EAAE;IACNC,QAAQ,CAACC,KAAD,EAAQ;MACZA,KAAK,CAACT,OAAN,GAAgB,IAAhB;IACH,CAHK;;IAINU,WAAW,CAACD,KAAD,EAAQE,MAAR,EAA+C;MACtDF,KAAK,CAACT,OAAN,GAAgB,KAAhB;MACAS,KAAK,CAACN,QAAN,GAAiBQ,MAAM,CAACC,OAAP,CAAeT,QAAhC;MACAM,KAAK,CAACL,iBAAN,GAA0BO,MAAM,CAACC,OAAP,CAAeT,QAAzC;MACAM,KAAK,CAACR,KAAN,GAAcU,MAAM,CAACC,OAAP,CAAeX,KAA7B;MACAQ,KAAK,CAACP,KAAN,GAAc,EAAd;IACH,CAVK;;IAWNW,UAAU,CAACJ,KAAD,EAAQE,MAAR,EAAsC;MAC5CF,KAAK,CAACT,OAAN,GAAgB,KAAhB;MACAS,KAAK,CAACP,KAAN,GAAcS,MAAM,CAACC,OAAP,CAAeE,OAA7B;IACH,CAdK;;IAeNC,MAAM,CAACN,KAAD,EAAQE,MAAR,EAAwC;MAC1CF,KAAK,CAACN,QAAN,GAAiBM,KAAK,CAACL,iBAAN,CACZW,MADY,CACLC,CAAC,IAAIA,CAAC,CAACC,IAAF,CAAOC,QAAP,CAAgBP,MAAM,CAACC,OAAP,CAAeK,IAA/B,CADA,EAEZF,MAFY,CAELC,CAAC,IAAIA,CAAC,CAACG,OAAF,CAAUD,QAAV,CAAmBP,MAAM,CAACC,OAAP,CAAeO,OAAlC,CAFA,EAGZJ,MAHY,CAGLC,CAAC,IAAIA,CAAC,CAACI,MAAF,CAASF,QAAT,CAAkBP,MAAM,CAACC,OAAP,CAAeQ,MAAjC,CAHA,CAAjB;IAIH;;EApBK;AAH0B,CAAD,CAAhC;AA4BP,eAAef,YAAY,CAACgB,OAA5B"},"metadata":{},"sourceType":"module"}