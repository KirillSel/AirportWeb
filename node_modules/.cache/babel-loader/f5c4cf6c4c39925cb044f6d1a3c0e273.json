{"ast":null,"code":"var _localStorage$getItem, _localStorage$getItem2;\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst ACCESS_KEY = 'u-access';\nconst USERNAME_KEY = 'u-username';\nconst initialState = {\n  access: (_localStorage$getItem = localStorage.getItem(ACCESS_KEY)) !== null && _localStorage$getItem !== void 0 ? _localStorage$getItem : '',\n  username: (_localStorage$getItem2 = localStorage.getItem(USERNAME_KEY)) !== null && _localStorage$getItem2 !== void 0 ? _localStorage$getItem2 : '',\n  isAuth: Boolean(localStorage.getItem(ACCESS_KEY))\n};\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    login(state, action) {\n      state.access = action.payload.access;\n      state.username = action.payload.username;\n      state.isAuth = Boolean(action.payload.access);\n      localStorage.setItem(ACCESS_KEY, action.payload.access);\n      localStorage.setItem(USERNAME_KEY, action.payload.username);\n    }\n\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","ACCESS_KEY","USERNAME_KEY","initialState","access","localStorage","getItem","username","isAuth","Boolean","authSlice","name","reducers","login","state","action","payload","setItem","reducer"],"sources":["/Users/alexander/Desktop/WebStormProj/spareact/src/store/slices/authSlice.ts"],"sourcesContent":["import {IAirport, IAirportCountry, IAirportRegion, IAirportType} from \"../../models/models\";\nimport {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\n\nconst ACCESS_KEY = 'u-access'\nconst USERNAME_KEY = 'u-username'\n\n\ninterface AuthState {\n    access: string\n    username: string\n    isAuth: boolean\n}\n\n\nconst initialState: AuthState = {\n    access: localStorage.getItem(ACCESS_KEY) ?? '',\n    username: localStorage.getItem(USERNAME_KEY) ?? '',\n    isAuth: Boolean(localStorage.getItem(ACCESS_KEY))\n}\n\ninterface AuthPayload {\n    username: string\n    access: string\n}\n\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        login(state, action: PayloadAction<AuthPayload>) {\n            state.access = action.payload.access\n            state.username = action.payload.username\n            state.isAuth = Boolean(action.payload.access)\n\n            localStorage.setItem(ACCESS_KEY, action.payload.access)\n            localStorage.setItem(USERNAME_KEY, action.payload.username)\n        }\n\n    }\n})\n\nexport default authSlice.reducer"],"mappings":";;AACA,SAAQA,WAAR,QAAyC,kBAAzC;AAEA,MAAMC,UAAU,GAAG,UAAnB;AACA,MAAMC,YAAY,GAAG,YAArB;AAUA,MAAMC,YAAuB,GAAG;EAC5BC,MAAM,2BAAEC,YAAY,CAACC,OAAb,CAAqBL,UAArB,CAAF,yEAAsC,EADhB;EAE5BM,QAAQ,4BAAEF,YAAY,CAACC,OAAb,CAAqBJ,YAArB,CAAF,2EAAwC,EAFpB;EAG5BM,MAAM,EAAEC,OAAO,CAACJ,YAAY,CAACC,OAAb,CAAqBL,UAArB,CAAD;AAHa,CAAhC;AAYA,OAAO,MAAMS,SAAS,GAAGV,WAAW,CAAC;EACjCW,IAAI,EAAE,MAD2B;EAEjCR,YAFiC;EAGjCS,QAAQ,EAAE;IACNC,KAAK,CAACC,KAAD,EAAQC,MAAR,EAA4C;MAC7CD,KAAK,CAACV,MAAN,GAAeW,MAAM,CAACC,OAAP,CAAeZ,MAA9B;MACAU,KAAK,CAACP,QAAN,GAAiBQ,MAAM,CAACC,OAAP,CAAeT,QAAhC;MACAO,KAAK,CAACN,MAAN,GAAeC,OAAO,CAACM,MAAM,CAACC,OAAP,CAAeZ,MAAhB,CAAtB;MAEAC,YAAY,CAACY,OAAb,CAAqBhB,UAArB,EAAiCc,MAAM,CAACC,OAAP,CAAeZ,MAAhD;MACAC,YAAY,CAACY,OAAb,CAAqBf,YAArB,EAAmCa,MAAM,CAACC,OAAP,CAAeT,QAAlD;IACH;;EARK;AAHuB,CAAD,CAA7B;AAgBP,eAAeG,SAAS,CAACQ,OAAzB"},"metadata":{},"sourceType":"module"}