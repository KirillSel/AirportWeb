{"ast":null,"code":"import axios from \"../../axios\";\nimport { authSlice } from \"../slices/authSlice\";\nexport const register = data => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(`auth/register`, data);\n      dispatch(authSlice.actions.login({\n        username: data.username,\n        access: response.data.access\n      }));\n    } catch (e) {\n      console.log('error', e);\n    }\n  };\n};\nexport const login = data => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(`auth/login`, data);\n      dispatch(authSlice.actions.login({\n        username: data.username,\n        access: response.data.access\n      }));\n    } catch (e) {\n      throw New;\n    }\n  };\n};","map":{"version":3,"names":["axios","authSlice","register","data","dispatch","response","post","actions","login","username","access","e","console","log","New"],"sources":["/Users/alexander/Desktop/WebStormProj/spareact/src/store/actions/authActions.ts"],"sourcesContent":["import {AppDispatch} from \"../index\";\nimport axios from \"../../axios\";\nimport {authSlice} from \"../slices/authSlice\";\n\ninterface AuthResponse {\n    access: string\n    refresh: string\n}\n\ninterface AuthData{\n    username: string\n    password: string\n}\n\nexport const register = (data: AuthData) => {\n    return async (dispatch: AppDispatch) => {\n        try {\n            const response = await axios.post<AuthResponse>(`auth/register`, data)\n            dispatch(authSlice.actions.login({\n                username: data.username,\n                access: response.data.access\n            }))\n        } catch (e) {\n            console.log('error', e)\n        }\n\n    }\n}\n\nexport const login = (data: AuthData) => {\n    return async (dispatch: AppDispatch) => {\n        try {\n            const response = await axios.post<AuthResponse>(`auth/login`, data)\n            dispatch(authSlice.actions.login({\n                username: data.username,\n                access: response.data.access\n            }))\n        } catch (e) {\n            throw New\n        }\n\n    }\n}"],"mappings":"AACA,OAAOA,KAAP,MAAkB,aAAlB;AACA,SAAQC,SAAR,QAAwB,qBAAxB;AAYA,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAoB;EACxC,OAAO,MAAOC,QAAP,IAAiC;IACpC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAN,CAA0B,eAA1B,EAA0CH,IAA1C,CAAvB;MACAC,QAAQ,CAACH,SAAS,CAACM,OAAV,CAAkBC,KAAlB,CAAwB;QAC7BC,QAAQ,EAAEN,IAAI,CAACM,QADc;QAE7BC,MAAM,EAAEL,QAAQ,CAACF,IAAT,CAAcO;MAFO,CAAxB,CAAD,CAAR;IAIH,CAND,CAME,OAAOC,CAAP,EAAU;MACRC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,CAArB;IACH;EAEJ,CAXD;AAYH,CAbM;AAeP,OAAO,MAAMH,KAAK,GAAIL,IAAD,IAAoB;EACrC,OAAO,MAAOC,QAAP,IAAiC;IACpC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAN,CAA0B,YAA1B,EAAuCH,IAAvC,CAAvB;MACAC,QAAQ,CAACH,SAAS,CAACM,OAAV,CAAkBC,KAAlB,CAAwB;QAC7BC,QAAQ,EAAEN,IAAI,CAACM,QADc;QAE7BC,MAAM,EAAEL,QAAQ,CAACF,IAAT,CAAcO;MAFO,CAAxB,CAAD,CAAR;IAIH,CAND,CAME,OAAOC,CAAP,EAAU;MACR,MAAMG,GAAN;IACH;EAEJ,CAXD;AAYH,CAbM"},"metadata":{},"sourceType":"module"}